{
	"scope": "source.omaxscript",
	"completions":
	[
		"omaxscript",

		{ "trigger": "clrscr", "contents": "clrscr;" },		
		{ "trigger": "crt", "contents": "crt" },		
		{ "trigger": "keypressed", "contents": "keypressed;" },		
		{ "trigger": "read", "contents": "read($1);" },		
		{ "trigger": "readkey", "contents": "readkey;" },		
		{ "trigger": "readln", "contents": "readln($1);" },		
		{ "trigger": "write", "contents": "write('$1');" },
		{ "trigger": "writeln", "contents": "writeln('$1');" },
		{ "trigger": "uses", "contents": "uses" },		
		{ "trigger": "inc", "contents": "inc($1);" },		
		{ "trigger": "forward", "contents": "forward;" },		
		{ "trigger": "external", "contents": "external;" },		

		{ "trigger": "Shortint", "contents": "Shortint" },
		{ "trigger": "Integer", "contents": "Integer" },
		{ "trigger": "Longint", "contents": "Longint" },		
		{ "trigger": "Byte", "contents": "Byte" },		
		{ "trigger": "Word", "contents": "Word" },		
		
		{ "trigger": "Boolean", "contents": "Boolean" },		
		{ "trigger": "WordBool", "contents": "WordBool" },		
		{ "trigger": "LongBool", "contents": "LongBool" },		
		{ "trigger": "ByteBool", "contents": "ByteBool" },		
		
		{ "trigger": "Real", "contents": "Real" },		
		{ "trigger": "Single", "contents": "Single" },		
		{ "trigger": "Double", "contents": "Double" },		
		{ "trigger": "Extended", "contents": "Extended" },		
		{ "trigger": "Comp", "contents": "comp" },		
		
		{ "trigger": "String", "contents": "String" },		
		{ "trigger": "Char", "contents": "Char" },		
		{ "trigger": "const", "contents": "const" },		
		{ "trigger": "array", "contents": "array[$1..$2] of" },		

		{ "trigger": "procedure", "contents": "procedure $1;\nbegin\n\t${2}\nend;" },		
		{ "trigger": "function", "contents": "function $1($2):$3\nbegin\n\t${1}:=\nend;" },
		{ "trigger": "Length", "contents": "Length($1)" },
		{ "trigger": "Upcase", "contents": "Upcase($1)" },
		{ "trigger": "with", "contents": "with ($1) do\nbegin\n\t${2}\nend;" },

		{ "trigger": "gotoxy", "contents": "gotoxy($1,$2);" },
		{ "trigger": "textcolor", "contents": "textcolor($1);" },
		{ "trigger": "textbackground", "contents": "textbackground($1);" },

		// OMAX_Constants
		"crPan",
		"crInquire",
		"crSelect",
		"crMagnifyGlass",
		"crWindow",
		"crcrossHair2",
		"crSnapBlank",
		"crSnapParallel",
		"crSnapPerpendicular",
		"crSnapCenter",
		"crSnapNear",
		"crSnapTangent",
		"crSnapQuadrant",
		"crSnapEndPoint",
		"crSnapMidPoint",
		"crSnapOf",
		"crSnapFrom",
		"crSnapTo",
		"crSnapOrthogonalX",
		"crSnapOrthogonalY",
		"crEraser",
		"crDivide",
		"crIDivide",
		"crFillet",
		"crFlip",
		"crRotate",
		"crMirrorX",
		"crMirrorY",
		"crDeselect",
		"crEraseWindow",
		"crNearTo",
		"crPerpendicularTo",
		"crTangentTo",
		"crDeselectWindow",
		"crSelectWindow",
		"crZoomWindow",
		"crPencil",
		"crAutoIDivide",
		"crIBeam",
		"crQuality",
		"crQualityWindow",
		"crOffset",
		"crLeadIOV",
		"crLeadIOVAutoTraverse",
		"crWeld",
		"crJoin",
		"crManualOrder",
		"crOrderStart",
		"crMoveFrom",
		"crClick",
		"crIBeamPathFont",
		"crSelectConnected",
		"crDeselectConnected",
		"crOffsetOneSide",
		"crInquireStep",
		"crGoToFeature",
		"crMirrorLine",
		"crZPainter",
		"crSnapDivideDistance",
		"crSimpleTab",
		"crRotateSameAngle1",
		"crRotateSameAngle2",
		"crIDivideTouching",
		"crSwap",
		"crMoveLead",
		"crMoveLeadShort",
		"crCornerLoop",
		"crSelectCircularWindow",
		"crDeselectCircularWindow",
		"crEraseCircularWindow",
		"crMoveLeadShortHourglass",
		"crSwapHourglass",
		"crSmallHourGlass",
		"crBridge",
		"crBridgeHourGlass",
		"crSimpleTabHourGlass",
		"crCornerLoopHourGlass",
		"crOrderOffset",
		"crBarb",

		"amDoNothing",
		"amZoomCursor",
		"amZoomWindow",
		"amPan",
		"amDrawContinuousLine",
		"amDrawSingleLine",
		"amDraw3PtArc",
		"amDraw2ptCircle",
		"amDraw3ptCircle",
		"amDraw2ptEllipse",
		"amDraw3ptEllipse",
		"amDrawPolygon",
		"amCustomShape",
		"amEraseCursor",
		"amSelectCursor",
		"amDeSelectCursor",
		"amDivideCursor",
		"amIntersectionDivide",
		"amAutoIDivide",
		"amDrawBox",
		"amLeadIOV",
		"amFillet",
		"amFlip",
		"amEraseWindow",
		"amSelectWindow",
		"amDeselectWindow",
		"amRotate",
		"amMove",
		"amInquire",
		"amMeasure",
		"amSetZero",
		"amMirrorX",
		"amMirrorY",
		"amCopy",
		"amGetSinglePoint",
		"amQualityCursor",
		"amQualityWindow",
		"amOffsetEntity",
		"amWeldCursor",
		"amJoin",
		"amAskForStart",
		"amContinueOrdering",
		"amSelectConnected",
		"amDraw2ptEdgeCircle",
		"amDraw2ptCenterEllipse",
		"amDrawContinuousArc",
		"amDeSelectConnected",
		"amMirrorLine",
		"amStretchArc",
		"amExtendEntity",
		"amChamfer",
		"amSimpleTab",
		"amContinueLeadIOV",
		"amRotateToSameAngleAs",
		"amIDivideTouching",
		"amDrawContinuousSpline",
		"amDivideIntoSections",
		"amRawInquire",

		"mbsNone",
		"mbsLeft",
		"mbsRight",
		"mbsMiddle",

		"stNone",
		"stNearest",
		"stEndpoint",
		"stQuadrant",
		"stCenterOfArc",
		"stMidPoint",
		"stIntersection",
		"stLocalZero",
		"stAbsoluteZero",
		"stDrawingLimit",
		"stSelectedLimit",
		"stOppositeEndpoint",

		"wbPing",
		"wbCameraClick",
		"wbTrayHint",
		"wbConfirmClick",

		"xdtNoData",
		"xdtDebugText",
		"xdtCommentOnEntity",
		"xdtCommentCenterPointOfEntity",
		"xdtCommentCordMidpoint",
		"xdtLinearDimensionOnEntity",
		"xdtPause",
		"xdtDelay",
		"xdtRotaryRotateByAngle",
		"xdtRotaryRotateToAngle",
		"xdtStartRotaryInterpolateYasTheta",
		"xdtEndRotaryInterpolateYasTheta",
		"xdtRotarySetSpinRPM",
		"xdtForcePercentSpeed",
		"xdtForceAbsoluteSpeedIPM",
		"xdtEntityNumber",
		"xdtStartTiltByTiltAndDirection",
		"xdtStartTiltByTiltXTiltY",
		"xdtMoveZInches",
		"xdtStartBevelAngles",
		"xdtEndAllXDataTilting",
		"xdtStartTiltInterpolationType",
		"xdtSetSingleEntityByTiltAndDirection",
		"xdtSetSingleEntityTiltByTiltXTiltY",
		"xdtSetSingleEntityBevelAngle",
		"xdtStartTiltByVector",
		"xdtSetSingleEntityTiltbyVector",
		"xdtSetSingleEntityTiltByFocusPoint",
		"xdtSetReferencePoint",
		"xdtErrorComment",
		"xdtWarningComment",
		"xdtTapercompensationtype",
		"xdtSetSingleEntityTiltByBottomPoint",
		"xdtBitstreamInsertBTSFile",
		"xdtBitstreamInsertLatchedIO",
		"xdtBitstreamInsertLatchedIOor",
		"xdtBitstreamInsertLatchedIOandNOT",
		"xdtBitstreamInsertFrame",
		"xdtSetOffsetTo",
		"xdtSetModifyOffsetBy",

		"BRIDGE",
		"TAB",
		"OPTIONS",
		"CANCEL",
		"CORNERLOOP",
		"SIMPLETAB",
		"PIXELCONVERSION",
		"OKToTab",


		// OMAX_Functions
		"OMAX_Redraw",
		"OMAX_RedrawWithArrows",
		{ "trigger": "OMAX_ZoomExtents", "contents": "OMAX_ZoomExtents(${1:BorderScaleFactor:Double=0})" },
		"OMAX_ZoomTable",
		"OMAX_ZoomPrevious",
		"OMAX_ZoomNext",
		"OMAX_ZoomSelected",
		"OMAX_ZoomActual",
		{ "trigger": "OMAX_ZoomToPoint", "contents": "OMAX_ZoomToPoint(${1:X:Double}, ${2:Y:Double}, ${3:Scale:Double=0})" },
		{ "trigger": "OMAX_SetZoomScale", "contents": "OMAX_SetZoomScale(${1:NewScale:Double})" },
		"OMAX_GetZoomScale",
		{ "trigger": "OMAX_DrawEntityWithArrow", "contents": "OMAX_DrawEntityWithArrow(${1:EntityNumber:Integer}, ${2:ArrowColor:TColor=clYellow})" },
		{ "trigger": "OMAX_HighlightEntity", "contents": "OMAX_HighlightEntity(${1:EntityNumber:Integer}, ${2:HighlightColor:TColor=clYellow})" },
		{ "trigger": "OMAX_DimLeadsAndTraverses", "contents": "OMAX_DimLeadsAndTraverses(${1:DimFlag:Boolean})" },
		{ "trigger": "OMAX_SetCursor", "contents": "OMAX_SetCursor(${1:CursorID:LongInt})" },
		"OMAX_RememberCursor",
		"OMAX_RestoreCursor",
		"OMAX_Scale",
		"OMAX_PixelsPerInch",
		{ "trigger": "OMAX_RedrawToBackgroundBuffer", "contents": "OMAX_RedrawToBackgroundBuffer(${1:BufferNo:Byte=0})" },
		{ "trigger": "OMAX_RestoreBackgroundFromBuffer", "contents": "OMAX_RestoreBackgroundFromBuffer(${1:BufferNo:Byte=0})" },
		{ "trigger": "OMAX_RedrawRangeWithBuffer", "contents": "OMAX_RedrawRangeWithBuffer(${1:StartEl:Integer}, ${2:EndEl:Integer}, ${3:BufferNoToUseAsBackground:Byte=0})" },
		{ "trigger": "OMAX_RubberDrawRangeWithBuffer", "contents": "OMAX_RubberDrawRangeWithBuffer(${1:StartEl:Integer}, ${2:EndEl:Integer}, ${3:BufferNoToUseAsBackground:Byte=0})" },
		{ "trigger": "OMAX_OpenFile", "contents": "OMAX_OpenFile(${1:FileName:String})" },
		{ "trigger": "OMAX_InsertParametricShape", "contents": "OMAX_InsertParametricShape(${1:FileName:String}, ${2:XLocation:Double;ParametricVars}, ${3:YLocation:Double;ParametricVars})" },
		{ "trigger": "OMAX_SaveAsDXF", "contents": "OMAX_SaveAsDXF(${1:FileName:String})" },
		{ "trigger": "OMAX_SaveSelectedAsDXF", "contents": "OMAX_SaveSelectedAsDXF(${1:FileName:String})" },
		{ "trigger": "OMAX_SaveAsCSVFile", "contents": "OMAX_SaveAsCSVFile(${1:FileName:String}, ${2:SelectedOnly:Boolean=False})" },
		{ "trigger": "OMAX_OpenCSVFile", "contents": "OMAX_OpenCSVFile(${1:FileName:String}, ${2:SelectNewEntities:Boolean=True})" },
		{ "trigger": "OMAX_DeleteFile", "contents": "OMAX_DeleteFile(${1:FileName:String})" },
		{ "trigger": "OMAX_WildCardDelete", "contents": "OMAX_WildCardDelete(${1:FileNameWithWildCard:String}, ${2:ConfirmFirst:Boolean})" },
		{ "trigger": "OMAX_SendToRecycleBin", "contents": "OMAX_SendToRecycleBin(${1:FileName:String}, ${2:ConfirmFirst:Boolean=True})" },
		{ "trigger": "OMAX_RenameFile", "contents": "OMAX_RenameFile(${1:OldFileName:String}, ${2:NewFileName:String})" },
		{ "trigger": "OMAX_CopyFile", "contents": "OMAX_CopyFile(${1:ExistingFileName:String}, ${2:NewFileName:String}, ${3:FailIfExists:Boolean=True})" },
		{ "trigger": "OMAX_FileDate", "contents": "OMAX_FileDate(${1:FileName:String})" },
		{ "trigger": "OMAX_FileExists", "contents": "OMAX_FileExists(${1:FileName:String})" },
		{ "trigger": "OMAX_FolderExists", "contents": "OMAX_FolderExists(${1:FolderName:String})" },
		{ "trigger": "OMAX_CreateFolderPath", "contents": "OMAX_CreateFolderPath(${1:FolderName:String})" },
		{ "trigger": "OMAX_AskUserForFolder", "contents": "OMAX_AskUserForFolder(${1:DefaultFolder:String=})" },
		{ "trigger": "OMAX_OpenFileInMake", "contents": "OMAX_OpenFileInMake(${1:FileName:String})" },
		{ "trigger": "OMAX_OpenFileInLayout", "contents": "OMAX_OpenFileInLayout(${1:FileName:String})" },
		{ "trigger": "OMAX_OpenFileIn3DPathEditor", "contents": "OMAX_OpenFileIn3DPathEditor(${1:FileName:String})" },
		{ "trigger": "OMAX_RunExeFile", "contents": "OMAX_RunExeFile(${1:FileName:String})" },
		{ "trigger": "OMAX_RunExeAndWait", "contents": "OMAX_RunExeAndWait(${1:ExecFile:String}, ${2: TimeOut:Word; AllowKill})" },
		"OMAX_GetSharedFolder",
		"OMAX_GetExeFolder",
		"OMAX_GetWindowsDir",
		"OMAX_GetTempDir",
		"OMAX_GetWindowsSystemDir",
		"OMAX_GetAllUsersAppDataDir",
		"OMAX_GetCurrentUsersAppDataDir",
		"OMAX_GetCommonFilesFolder",
		"OMAX_GetDownloadsFolder",
		"OMAX_GetPublicFolder",
		"OMAX_GetDesktopFolder",
		{ "trigger": "OMAX_GetFolderContents", "contents": "OMAX_GetFolderContents(${1:FolderToInspect:String}, ${2:FlagSubFolders:Boolean=False})" },
		{ "trigger": "OMAX_AddSlashToPath", "contents": "OMAX_AddSlashToPath(${1:InPath:String})" },
		{ "trigger": "OMAX_RemoveSlashFromPath", "contents": "OMAX_RemoveSlashFromPath(${1:InPath:String})" },
		{ "trigger": "OMAX_WriteINIString", "contents": "OMAX_WriteINIString(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:NewStr:String}, ${5:CreateIfNeeded:Boolean=True})" },
		{ "trigger": "OMAX_ReadINIString", "contents": "OMAX_ReadINIString(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:DefaultValue:String})" },
		{ "trigger": "OMAX_WriteINIFloat", "contents": "OMAX_WriteINIFloat(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:NewValue:Double;CreateIfNeeded})" },
		{ "trigger": "OMAX_ReadINIFloat", "contents": "OMAX_ReadINIFloat(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:DefaultValue:Double})" },
		{ "trigger": "OMAX_WriteINIBool", "contents": "OMAX_WriteINIBool(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:NewValue:Boolean;CreateIfNeeded})" },
		{ "trigger": "OMAX_ReadINIBool", "contents": "OMAX_ReadINIBool(${1:IniFileName:String}, ${2:Section:String}, ${3:Ident:String}, ${4:DefaultValue:Boolean})" },
		{ "trigger": "OMAX_AppendTextToFile", "contents": "OMAX_AppendTextToFile(${1:FileNameToAppendTo:String}, ${2:TextToAppend:String})" },
		{ "trigger": "OMAX_ExtractFileExt", "contents": "OMAX_ExtractFileExt(${1:FileName:String})" },
		{ "trigger": "OMAX_ExtractFileName", "contents": "OMAX_ExtractFileName(${1:PathWithFileName:String})" },
		{ "trigger": "OMAX_NoExtension", "contents": "OMAX_NoExtension(${1:FileName:String})" },
		{ "trigger": "OMAX_ZipFiles", "contents": "OMAX_ZipFiles(${1:ZipFileName:String}, ${2:FileList:String})" },
		{ "trigger": "OMAX_UnZipFiles", "contents": "OMAX_UnZipFiles(${1:ZipFileName:String}, ${2:DestinationFolder:String})" },
		"OMAX_GetOSID",
		{ "trigger": "OMAX_GetOSNameFromID", "contents": "OMAX_GetOSNameFromID(${1:ID:Integer})" },
		"OMAX_GetSoftwareVersion",
		"OMAX_GetHostName",
		{ "trigger": "OMAX_GetCADWindowLocation", "contents": "OMAX_GetCADWindowLocation(${1:var Left:Integer}, ${2:Top:Integer})" },
		"OMAX_GetHostFileName",
		"OMAX_EntityCount",
		"OMAX_SelectedCount",
		"OMAX_IsAnythingSelected",
		"OMAX_SelectAll",
		"OMAX_DeselectAll",
		{ "trigger": "OMAX_SelectDeselectWithinRadius", "contents": "OMAX_SelectDeselectWithinRadius(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:Radius:Double}, ${4:SelectFlag:Boolean})" },
		{ "trigger": "OMAX_SelectDeselectConnected", "contents": "OMAX_SelectDeselectConnected(${1:StartX:Double}, ${2:StartY:Double}, ${3:SelectFlag:Boolean;Tolerance})" },
		"OMAX_InvertSelection",
		{ "trigger": "OMAX_SelectDeselectEntity", "contents": "OMAX_SelectDeselectEntity(${1:EntityNumber:Integer}, ${2:SelectFlag:Boolean})" },
		{ "trigger": "OMAX_SelectEntity", "contents": "OMAX_SelectEntity(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_DeselectEntity", "contents": "OMAX_DeselectEntity(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_SelectQualityOf", "contents": "OMAX_SelectQualityOf(${1:Quality:Integer})" },
		{ "trigger": "OMAX_DeselectQualityOf", "contents": "OMAX_DeselectQualityOf(${1:Quality:Integer})" },
		{ "trigger": "OMAX_NearestEntity", "contents": "OMAX_NearestEntity(${1:CadX:Double}, ${2:CadY:Double})" },
		{ "trigger": "OMAX_NearestAndSecondNearestEntity", "contents": "OMAX_NearestAndSecondNearestEntity(${1:CadX:Double}, ${2:CadY:Double}, ${3:var ClosestEntityNo:Integer}, ${4:SecondClosestEntityNo:Integer})" },
		{ "trigger": "OMAX_NearestAndSecondNearestEntityOfGivenQuality", "contents": "OMAX_NearestAndSecondNearestEntityOfGivenQuality(${1:CadX:Double}, ${2:CadY:Double}, ${3:var ClosestEntityNo:Integer;Quality}, ${4:SecondClosestEntityNo:Integer;Quality})" },
		{ "trigger": "OMAX_ThirdNearestEntity", "contents": "OMAX_ThirdNearestEntity(${1:CadX:Double}, ${2:CadY:Double})" },
		{ "trigger": "OMAX_NearestEndPoint", "contents": "OMAX_NearestEndPoint(${1:CadX:Double}, ${2:CadY:Double}, ${3:var ResultX:Double; var ResultEntityNo}, ${4:ResultY:Double; var ResultEntityNo})" },
		{ "trigger": "OMAX_NearestAndSecondNearestEndpoint", "contents": "OMAX_NearestAndSecondNearestEndpoint(${1:CadX:Double}, ${2:CadY:Double}, ${3:var ResultX1:Double; var ResultEntityNo1,ResultEntityNo2}, ${4:ResultY1:Double; var ResultEntityNo1,ResultEntityNo2}, ${5:ResultX2:Double; var ResultEntityNo1,ResultEntityNo2}, ${6:ResultY2:Double; var ResultEntityNo1,ResultEntityNo2})" },
		{ "trigger": "OMAX_WhichEndPointIsCloser", "contents": "OMAX_WhichEndPointIsCloser(${1:PointX:Double}, ${2:PointY:Double}, ${3:X1:Double}, ${4:Y1:Double}, ${5:X2:Double}, ${6:Y2:Double})" },
		{ "trigger": "OMAX_WhichEndPointOfEntityIsCloser", "contents": "OMAX_WhichEndPointOfEntityIsCloser(${1:PointX:Double}, ${2:PointY:Double}, ${3:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_X1", "contents": "OMAX_E_X1(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_Y1", "contents": "OMAX_E_Y1(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_X2", "contents": "OMAX_E_X2(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_Y2", "contents": "OMAX_E_Y2(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_Bow", "contents": "OMAX_E_Bow(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_Quality", "contents": "OMAX_E_Quality(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_XType", "contents": "OMAX_E_XType(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_XData", "contents": "OMAX_E_XData(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_SelectedFlag", "contents": "OMAX_E_SelectedFlag(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_EraseMeFlag", "contents": "OMAX_E_EraseMeFlag(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_TiltAngleStart", "contents": "OMAX_E_TiltAngleStart(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_TiltAngleEnd", "contents": "OMAX_E_TiltAngleEnd(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_SetX1", "contents": "OMAX_E_SetX1(${1:EntityNumber:Integer}, ${2:NewX1:Double})" },
		{ "trigger": "OMAX_E_SetY1", "contents": "OMAX_E_SetY1(${1:EntityNumber:Integer}, ${2:NewY1:Double})" },
		{ "trigger": "OMAX_E_SetX2", "contents": "OMAX_E_SetX2(${1:EntityNumber:Integer}, ${2:NewX2:Double})" },
		{ "trigger": "OMAX_E_SetY2", "contents": "OMAX_E_SetY2(${1:EntityNumber:Integer}, ${2:NewY2:Double})" },
		{ "trigger": "OMAX_E_SetBow", "contents": "OMAX_E_SetBow(${1:EntityNumber:Integer}, ${2:NewBow:Double})" },
		{ "trigger": "OMAX_E_SetQuality", "contents": "OMAX_E_SetQuality(${1:EntityNumber:Integer}, ${2:NewQuality:Integer})" },
		{ "trigger": "OMAX_E_SetXType", "contents": "OMAX_E_SetXType(${1:EntityNumber:Integer}, ${2:NewType:Integer})" },
		{ "trigger": "OMAX_E_SetXData", "contents": "OMAX_E_SetXData(${1:EntityNumber:Integer}, ${2:NewData:String})" },
		{ "trigger": "OMAX_E_SetSelectedFlag", "contents": "OMAX_E_SetSelectedFlag(${1:EntityNumber:Integer}, ${2:NewSelectedFlag:Boolean})" },
		{ "trigger": "OMAX_E_SetEraseMeFlag", "contents": "OMAX_E_SetEraseMeFlag(${1:EntityNumber:Integer}, ${2:NewEraseMeFlag:Boolean})" },
		{ "trigger": "OMAX_E_SetTiltAngleStart", "contents": "OMAX_E_SetTiltAngleStart(${1:EntityNumber:Integer}, ${2:NewTiltAngleStart:Double})" },
		{ "trigger": "OMAX_E_SetTiltAngleEnd", "contents": "OMAX_E_SetTiltAngleEnd(${1:EntityNumber:Integer}, ${2:NewTiltAngleEnd:Double})" },
		{ "trigger": "OMAX_E_Length", "contents": "OMAX_E_Length(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_CenterX", "contents": "OMAX_E_CenterX(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_CenterY", "contents": "OMAX_E_CenterY(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_Radius", "contents": "OMAX_E_Radius(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_E_MidPoint", "contents": "OMAX_E_MidPoint(${1:EntityNumber:Integer}, ${2: var MidX:Double}, ${3:MidY:Double})" },
		{ "trigger": "OMAX_SetXTypeOfSelected", "contents": "OMAX_SetXTypeOfSelected(${1:NewType:Integer})" },
		{ "trigger": "OMAX_SetXDataOfSelected", "contents": "OMAX_SetXDataOfSelected(${1:NewData:String})" },
		{ "trigger": "OMAX_ComputeDrawingExtents", "contents": "OMAX_ComputeDrawingExtents(${1:var MaxX:Double}, ${2:MaxY:Double}, ${3:MinX:Double}, ${4:MinY:Double})" },
		{ "trigger": "OMAX_ComputePartDimensions", "contents": "OMAX_ComputePartDimensions(${1:var PartWidth:Double}, ${2:PartHeight:Double}, ${3:SelectedFlag:Boolean=False})" },
		{ "trigger": "OMAX_GetCuttingExtents", "contents": "OMAX_GetCuttingExtents(${1:var MaxX:Double}, ${2:MaxY:Double}, ${3:MinX:Double}, ${4:MinY:Double})" },
		{ "trigger": "OMAX_GetSelectedExtents", "contents": "OMAX_GetSelectedExtents(${1:var MaxX:Double}, ${2:MaxY:Double}, ${3:MinX:Double}, ${4:MinY:Double})" },
		"OMAX_PrepareIsPointOnPart",
		{ "trigger": "OMAX_IsPointOnPart", "contents": "OMAX_IsPointOnPart(${1:CadX:Double}, ${2:CadY:Double})" },
		{ "trigger": "OMAX_DistanceFromPointToEntity", "contents": "OMAX_DistanceFromPointToEntity(${1:XPoint:Double}, ${2:YPoint:Double}, ${3:ElX1:Double}, ${4:ElY1:Double}, ${5:ElX2:Double}, ${6:ElY2:Double}, ${7:ElBow:Double})" },
		{ "trigger": "OMAX_DistanceFromLineToChordMidPoint", "contents": "OMAX_DistanceFromLineToChordMidPoint(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double})" },
		{ "trigger": "OMAX_PointAlongEntity", "contents": "OMAX_PointAlongEntity(${1:EndNo:Integer}, ${2:Distance:Double;var XPoint,YPoint}, ${3:X1:Double;var XPoint,YPoint}, ${4:Y1:Double;var XPoint,YPoint}, ${5:X2:Double;var XPoint,YPoint}, ${6:Y2:Double;var XPoint,YPoint}, ${7:Bow:Double;var XPoint,YPoint})" },
		{ "trigger": "OMAX_Distance", "contents": "OMAX_Distance(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double})" },
		{ "trigger": "OMAX_DistanceSquared", "contents": "OMAX_DistanceSquared(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double})" },
		{ "trigger": "OMAX_ComputeEntityLength", "contents": "OMAX_ComputeEntityLength(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double})" },
		{ "trigger": "OMAX_EntityExtents ", "contents": "OMAX_EntityExtents (${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6:var ElMaxX:Double}, ${7:ElMinX:Double}, ${8:ElMaxY:Double}, ${9:ElMinY:Double})" },
		{ "trigger": "OMAX_CenterRadiusAngleToBow", "contents": "OMAX_CenterRadiusAngleToBow(${1:var X1: Double}, ${2:Y1: Double}, ${3:X2: Double}, ${4:Y2: Double}, ${5:Bow: Double}, ${6: Radius:Double}, ${7:XCenter:Double}, ${8:YCenter:Double}, ${9:Theta1:Double}, ${10:Theta2:Double})" },
		{ "trigger": "OMAX_BowToCenterRadiusAngle ", "contents": "OMAX_BowToCenterRadiusAngle (${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6: var Radius:Double}, ${7:XCenter:Double}, ${8:YCenter:Double}, ${9:Theta1:Double}, ${10:Theta2:Double})" },
		{ "trigger": "OMAX_GetMidpointOfLineOrArc", "contents": "OMAX_GetMidpointOfLineOrArc(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6:Var ResultX:Double}, ${7:ResultY:Double})" },
		{ "trigger": "OMAX_GetMidpointOfLine", "contents": "OMAX_GetMidpointOfLine(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Var ResultX:Double}, ${6:ResultY:Double})" },
		{ "trigger": "OMAX_AngleToXAxis", "contents": "OMAX_AngleToXAxis(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double})" },
		{ "trigger": "OMAX_Power", "contents": "OMAX_Power(${1:Base:Double}, ${2:Exponent:Double})" },
		{ "trigger": "OMAX_Sgn", "contents": "OMAX_Sgn(${1:InNumber:Double})" },
		{ "trigger": "OMAX_Swap", "contents": "OMAX_Swap(${1:var A:Variant}, ${2:B:Variant})" },
		{ "trigger": "OMAX_NearlyEqual", "contents": "OMAX_NearlyEqual(${1:Number1:Double}, ${2:Number2:Double}, ${3:Tolerance:Extended=0.00000001})" },
		{ "trigger": "OMAX_DegToRad", "contents": "OMAX_DegToRad(${1:InDeg:Double})" },
		{ "trigger": "OMAX_RadToDeg", "contents": "OMAX_RadToDeg(${1:InRad:Double})" },
		{ "trigger": "OMAX_ComputeCircleFrom3Points", "contents": "OMAX_ComputeCircleFrom3Points(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:X3:Double}, ${6:Y3:Double}, ${7: var Xc:Double}, ${8:Yc:Double}, ${9:R:Double})" },
		{ "trigger": "OMAX_ComputeArcFrom3Points", "contents": "OMAX_ComputeArcFrom3Points(${1:var X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6:X3:Double}, ${7:Y3:Double})" },
		{ "trigger": "OMAX_ForceAngle0To360", "contents": "OMAX_ForceAngle0To360(${1:InAngleInDeg:Double})" },
		{ "trigger": "OMAX_TangentToEndpoint", "contents": "OMAX_TangentToEndpoint(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double})" },
		{ "trigger": "OMAX_FindIntersection", "contents": "OMAX_FindIntersection(${1:x1:double}, ${2:y1:double}, ${3:x2:double}, ${4:y2:double}, ${5:bowa:double}, ${6:x3:double}, ${7:y3:double}, ${8:x4:double}, ${9:y4:double}, ${10:bowb:double}, ${11: var xi1:double;var nint}, ${12:yi1:double;var nint}, ${13:xi2:double;var nint}, ${14:yi2:double;var nint})" },
		{ "trigger": "OMAX_FindClosestIntersection", "contents": "OMAX_FindClosestIntersection(${1:X:double}, ${2:Y:double}, ${3:x1:double}, ${4:y1:double}, ${5:x2:double}, ${6:y2:double}, ${7:bowa:double}, ${8:x3:double}, ${9:y3:double}, ${10:x4:double}, ${11:y4:double}, ${12:bowb:double}, ${13: var CloseX:Double; var nint}, ${14:CloseY:Double; var nint})" },
		{ "trigger": "OMAX_DoEntitiesIntersect", "contents": "OMAX_DoEntitiesIntersect(${1:e1X1:Double}, ${2:e1y1:Double}, ${3:e1x2:Double}, ${4:e1y2:Double}, ${5:e1bow:Double}, ${6:e2X1:Double}, ${7:e2y1:Double}, ${8:e2x2:Double}, ${9:e2y2:Double}, ${10:e2bow:Double})" },
		{ "trigger": "OMAX_OffsetBowArc", "contents": "OMAX_OffsetBowArc(${1:x1:double}, ${2:y1:double}, ${3:x2:double}, ${4:y2:double}, ${5:bow:double}, ${6:OffsetAmount:double}, ${7:var xa:double}, ${8:ya:double}, ${9:xb:double}, ${10:yb:double})" },
		{ "trigger": "OMAX_Bow2Rad", "contents": "OMAX_Bow2Rad(${1:x1:double}, ${2:y1:double}, ${3:x2:double}, ${4:y2:double}, ${5:bow:double}, ${6:var xc:double}, ${7:yc:double}, ${8:rad:double})" },
		{ "trigger": "OMAX_Rad2Bow", "contents": "OMAX_Rad2Bow(${1:x1:double}, ${2:y1:double}, ${3:x2:double}, ${4:y2:double}, ${5:xc:double}, ${6:yc:double}, ${7:var bow:double})" },
		{ "trigger": "OMAX_SetZero", "contents": "OMAX_SetZero(${1:X:Double}, ${2:Y:Double})" },
		"OMAX_ClearAll",
		{ "trigger": "OMAX_AddEntity", "contents": "OMAX_AddEntity(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6:Quality:Integer=0})" },
		{ "trigger": "OMAX_AddLineByLengthAndAngle", "contents": "OMAX_AddLineByLengthAndAngle(${1:StartX:Double}, ${2:StartY:Double}, ${3:Length:Double}, ${4:AngleInDeg:Double}, ${5:Quality:Integer=0})" },
		{ "trigger": "OMAX_AddLineToLastByLengthAndAngle", "contents": "OMAX_AddLineToLastByLengthAndAngle(${1:Length:Double}, ${2:AngleInDeg:Double}, ${3:Quality:Integer=0})" },
		{ "trigger": "OMAX_EraseEntity", "contents": "OMAX_EraseEntity(${1:EntityNumber:Integer})" },
		{ "trigger": "OMAX_FlagEntityForErasure", "contents": "OMAX_FlagEntityForErasure(${1:EntityNumber:Integer}, ${2:EraseFlag:Boolean=True})" },
		{ "trigger": "OMAX_FlagForErasureWithinRadius", "contents": "OMAX_FlagForErasureWithinRadius(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:Radius:Double})" },
		"OMAX_EraseFlaggedForErasure",
		"OMAX_ClearErasureFlags",
		"OMAX_EraseSelected",
		{ "trigger": "OMAX_EraseZeroLength", "contents": "OMAX_EraseZeroLength(${1:Threshold:Double=0.0000001})" },
		{ "trigger": "OMAX_ModifyEntity", "contents": "OMAX_ModifyEntity(${1:EntityNumber:Integer}, ${2:X1:Double;Quality}, ${3:Y1:Double;Quality}, ${4:X2:Double;Quality}, ${5:Y2:Double;Quality}, ${6:Bow:Double;Quality})" },
		{ "trigger": "OMAX_GetEntity", "contents": "OMAX_GetEntity(${1:EntityNumber:Integer}, ${2: var X1:Double; var Quality}, ${3:Y1:Double; var Quality}, ${4:X2:Double; var Quality}, ${5:Y2:Double; var Quality}, ${6:Bow:Double; var Quality})" },
		{ "trigger": "OMAX_RotatePointAboutZero", "contents": "OMAX_RotatePointAboutZero(${1:OriginalPointX:Double}, ${2:OriginalPointY:Double}, ${3:AngleDeg:Double}, ${4: Var NewPointX:Double}, ${5:NewPointY:Double})" },
		{ "trigger": "OMAX_RotatePointAboutPoint", "contents": "OMAX_RotatePointAboutPoint(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:ToRotateX:Double}, ${4:ToRotateY:Double}, ${5:AngleDeg:Double}, ${6: Var NewPointX:Double}, ${7:NewPointY:Double})" },
		{ "trigger": "OMAX_RotateSelectedAboutPoint", "contents": "OMAX_RotateSelectedAboutPoint(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:AngleInDeg:Double})" },
		{ "trigger": "OMAX_RotateCopySelected", "contents": "OMAX_RotateCopySelected(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:AngleInDeg:Double}, ${4:NumCopies:Integer})" },
		{ "trigger": "OMAX_MoveSelected", "contents": "OMAX_MoveSelected(${1:DX:Double}, ${2:DY:Double})" },
		{ "trigger": "OMAX_ReSizeSelected", "contents": "OMAX_ReSizeSelected(${1:ScaleFactorX:Extended}, ${2:ScaleFactorY:Extended}, ${3:CopyFlag:Boolean=False})" },
		{ "trigger": "OMAX_ReSizeSelectedWithoutCentering", "contents": "OMAX_ReSizeSelectedWithoutCentering(${1:ScaleFactor:Extended})" },
		{ "trigger": "OMAX_SimpleSnap", "contents": "OMAX_SimpleSnap(${1:CadX:Double}, ${2:CadY:Double}, ${3:SnapType:Integer; var ResultX,ResultY})" },
		{ "trigger": "OMAX_AddCross", "contents": "OMAX_AddCross(${1:X:Double=0.01}, ${2:Y:Double=0.01}, ${3:Size:Double=0.01}, ${4:Quality:Integer=0})" },
		{ "trigger": "OMAX_AddPolygon", "contents": "OMAX_AddPolygon(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:CornerX:Double}, ${4:CornerY:Double}, ${5:NumSides:Integer;Quality})" },
		{ "trigger": "OMAX_AddPolygonBySideLength", "contents": "OMAX_AddPolygonBySideLength(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:SideLength:Double}, ${4:NumSides:Integer;Quality})" },
		{ "trigger": "OMAX_AddRectangle", "contents": "OMAX_AddRectangle(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Quality:Integer=0})" },
		{ "trigger": "OMAX_AddCircle", "contents": "OMAX_AddCircle(${1:CenterX:Double}, ${2:CenterY:Double}, ${3:Radius:Double}, ${4:Quality:Integer=0})" },
		{ "trigger": "OMAX_Add3ptCircle", "contents": "OMAX_Add3ptCircle(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:X3:Double}, ${6:Y3:Double}, ${7:Quality:Integer=0})" },
		{ "trigger": "OMAX_Add3ptArc", "contents": "OMAX_Add3ptArc(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:X3:Double}, ${6:Y3:Double}, ${7:Quality:Integer=0})" },
		{ "trigger": "OMAX_AddEllipseFromBox", "contents": "OMAX_AddEllipseFromBox(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Quality:Integer=0})" },
		{ "trigger": "OMAX_MirrorSelectedAboutX", "contents": "OMAX_MirrorSelectedAboutX(${1:XCoord:Double}, ${2:EraseOriginal:Boolean=False})" },
		{ "trigger": "OMAX_MirrorSelectedAboutY", "contents": "OMAX_MirrorSelectedAboutY(${1:YCoord:Double}, ${2:EraseOriginal:Boolean=False})" },
		{ "trigger": "OMAX_MirrorAboutLine", "contents": "OMAX_MirrorAboutLine(${1:var X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:EraseOriginalFlag:Boolean})" },
		{ "trigger": "OMAX_CopySelected", "contents": "OMAX_CopySelected(${1:NumCopies:Integer}, ${2:DX:Double}, ${3:DY:Double})" },
		{ "trigger": "OMAX_ChangeAllQualities", "contents": "OMAX_ChangeAllQualities(${1:OldQuality:Integer}, ${2:NewQuality:Integer})" },
		{ "trigger": "OMAX_ReverseEntityDirection", "contents": "OMAX_ReverseEntityDirection(${1:ElNo:Integer})" },
		{ "trigger": "OMAX_InsertPathText", "contents": "OMAX_InsertPathText(${1:ShouldISelectFlag:Boolean}, ${2:CadX:Double;TextString,FontFileName}, ${3:CadY:Double;TextString,FontFileName}, ${4:ScaleFactor:Double;TextString,FontFileName})" },
		{ "trigger": "OMAX_ForceLineCoordinatesToLength", "contents": "OMAX_ForceLineCoordinatesToLength(${1:MinLength:Double}, ${2:MaxLength:Double}, ${3:X1:Double}, ${4:Y1:Double}, ${5:var X2:Double}, ${6:Y2:Double})" },
		{ "trigger": "OMAX_RotateLead", "contents": "OMAX_RotateLead(${1:ElNo:Integer}, ${2:AngleInDeg:Double})" },
		{ "trigger": "OMAX_GenerateGear", "contents": "OMAX_GenerateGear(${1:InternalGear:Boolean}, ${2:NumTeeth:LongInt;CenterX,CenterY,Pitch,PressureAngle})" },
		{ "trigger": "OMAX_GroomedOffsetSelected", "contents": "OMAX_GroomedOffsetSelected(${1:OffsetDistance:Double}, ${2:OffsetSide:Integer;KeepOriginal,ShowProgress,AllowCancel}, ${3:CornerOption:Integer;KeepOriginal,ShowProgress,AllowCancel}, ${4:SquareCornerFactor:Integer;KeepOriginal,ShowProgress,AllowCancel}, ${5:CloseOpenEndOption:Integer;KeepOriginal,ShowProgress,AllowCancel})" },
		{ "trigger": "OMAX_DivideEntityAtPoint", "contents": "OMAX_DivideEntityAtPoint(${1:EntityNoToDivide:Integer}, ${2:DivideX:Double;PreserveSequence}, ${3:DivideY:Double;PreserveSequence})" },
		{ "trigger": "OMAX_DivideEntityAtDistance", "contents": "OMAX_DivideEntityAtDistance(${1:EntityNoToDivide:Integer}, ${2:Distance:Double;EndNo})" },
		{ "trigger": "OMAX_SplitArc", "contents": "OMAX_SplitArc(${1:CenterX:double}, ${2:CenterY:double}, ${3:Radius:double}, ${4:StartingAngle:double}, ${5:EndingAngle:double}, ${6:var X1A1:double}, ${7:Y1A1:double}, ${8:X2A1:double}, ${9:Y2A1:double}, ${10:BOWA1:double}, ${11:X1A2:double}, ${12:Y1A2:double}, ${13:X2A2:double}, ${14:Y2A2:double}, ${15:BOWA2:double})" },
		{ "trigger": "OMAX_SplitBowArc", "contents": "OMAX_SplitBowArc(${1:X1:Double}, ${2:Y1:Double}, ${3:X2:Double}, ${4:Y2:Double}, ${5:Bow:Double}, ${6:var X1A1:Double}, ${7:Y1A1:Double}, ${8:X2A1:Double}, ${9:Y2A1:Double}, ${10:BOWA1:Double}, ${11:X1A2:Double}, ${12:Y1A2:Double}, ${13:X2A2:Double}, ${14:Y2A2:Double}, ${15:BOWA2:Double})" },
		{ "trigger": "OMAX_DivideEntityIntoEvenSections", "contents": "OMAX_DivideEntityIntoEvenSections(${1:EntityNoToDivide:Integer}, ${2:NumSections:Integer}, ${3:PreserveSequence:Boolean=True})" },
		{ "trigger": "OMAX_DivideEntitiesIntoPieces", "contents": "OMAX_DivideEntitiesIntoPieces(${1:MaxLength:Double}, ${2:DivideFromMiddle:Boolean}, ${3:SelectedOnly:Boolean}, ${4:PreserveSequence:Boolean})" },
		{ "trigger": "OMAX_IntersectionDivide", "contents": "OMAX_IntersectionDivide(${1:CadX:Double}, ${2:CadY:Double}, ${3:Entity1:Integer;var XIntersection,YIntersection}, ${4:Entity2:Integer;var XIntersection,YIntersection})" },
		{ "trigger": "OMAX_DivideAtClosestIntersection", "contents": "OMAX_DivideAtClosestIntersection(${1:CadX:Double}, ${2:CadY:Double}, ${3: var XIntersection:Double;DivideFlag}, ${4:YIntersection:Double;DivideFlag})" },
		{ "trigger": "OMAX_IDivideTouchingNearestEntity", "contents": "OMAX_IDivideTouchingNearestEntity(${1:CadX:Double}, ${2:CadY:Double})" },
		{ "trigger": "OMAX_IDivideTouching", "contents": "OMAX_IDivideTouching(${1:RefElNo:Integer})" },
		{ "trigger": "OMAX_Join", "contents": "OMAX_Join(${1:CadX:Double}, ${2:CadY:Double})" },
		{ "trigger": "OMAX_FilletTwoEntities", "contents": "OMAX_FilletTwoEntities(${1:Entity1:Integer}, ${2:Entity2:Integer}, ${3:Radius:Double;TrimOldEntitiesFlag}, ${4:CadX:Double;TrimOldEntitiesFlag}, ${5:CadY:Double;TrimOldEntitiesFlag})" },
		"OMAX_SplitBowsThatAreOutOfBounds",
		{ "trigger": "OMAX_EraseDuplicates", "contents": "OMAX_EraseDuplicates(${1:Tolerance:Double=0.0001})" },
		{ "trigger": "OMAX_JoinCloseEndpoints", "contents": "OMAX_JoinCloseEndpoints(${1:Tolerance:Double=0.0001})" },
		{ "trigger": "OMAX_AutoPathG1", "contents": "OMAX_AutoPathG1(${1:Method:Integer}, ${2:SelectedOnly:Boolean;StartCorner,InternalDirection,ExternalDirection,EntryStyle,ExitStyle})" },
		"OMAX_ClearOrderedData",
		{ "trigger": "OMAX_StoreOrderedData", "contents": "OMAX_StoreOrderedData(${1:X:Double}, ${2:Y:Double}, ${3:Z:Double}, ${4:TAStart:Double}, ${5:TAEnd:Double}, ${6:Bow:Double}, ${7:Quality:LongInt;XType}, ${8:Offset:LongInt;XType})" },
		{ "trigger": "OMAX_SaveOrderedDataAsORD", "contents": "OMAX_SaveOrderedDataAsORD(${1:FileName:String})" },
		{ "trigger": "OMAX_SaveOrderedDataAsOMX", "contents": "OMAX_SaveOrderedDataAsOMX(${1:FileName:String}, ${2:Comment:String})" },
		{ "trigger": "OMAX_GenerateOMXPathFromPoint", "contents": "OMAX_GenerateOMXPathFromPoint(${1:X:Double}, ${2:Y:Double}, ${3:FileName:String;Comment})" },
		{ "trigger": "OMAX_SaveEntitiesAsOMX", "contents": "OMAX_SaveEntitiesAsOMX(${1:FileName:String})" },
		{ "trigger": "OMAX_ParseDelimitedString", "contents": "OMAX_ParseDelimitedString(${1:InString:String}, ${2:ParseCharacter:String}, ${3:Position:Integer})" },
		{ "trigger": "OMAX_SetDebugMode", "contents": "OMAX_SetDebugMode(${1:ShowDebugOutput:Boolean})" },
		{ "trigger": "OMAX_ShowInstructions", "contents": "OMAX_ShowInstructions(${1:TopTitle:String}, ${2:BottomTitle:String}, ${3:Instructions:String})" },
		{ "trigger": "OMAX_Instructions", "contents": "OMAX_Instructions(${1:Instructions:String})" },
		"OMAX_HideInstructions",
		{ "trigger": "OMAX_CallOIRTopic", "contents": "OMAX_CallOIRTopic(${1:TopicID:Integer})" },
		{ "trigger": "OMAX_Sleep", "contents": "OMAX_Sleep(${1:TimeInMilliseconds:Integer})" },
		"OMAX_GetTickCount",
		"OMAX_IsControlKeyDown",
		"OMAX_IsShiftKeyDown",
		"OMAX_KeyboardState",
		"OMAX_MouseButtonStatus",
		"OMAX_WaitForMouseClick",
		"OMAX_WaitForMouseUp",
		"OMAX_WaitForKeyUp",
		"OMAX_WaitForKeyOrMouse",
		"OMAX_MouseCADX",
		"OMAX_MouseCADY",
		"OMAX_MousePixelX",
		"OMAX_MousePixelY",
		{ "trigger": "OMAX_GetQualityColor", "contents": "OMAX_GetQualityColor(${1:QualityNumber:Integer})" },
		"OMAX_GetBackgroundColor",
		"OMAX_GetGridXColor",
		"OMAX_GetGridYColor",
		{ "trigger": "OMAX_ColorFromRGB", "contents": "OMAX_ColorFromRGB(${1:Red:Integer}, ${2:Green:Integer}, ${3:Blue:Integer})" },
		{ "trigger": "OMAX_GetRGBFromColor", "contents": "OMAX_GetRGBFromColor(${1:Color:Integer}, ${2:var Red:Integer}, ${3:Green:Integer}, ${4:Blue:Integer})" },
		{ "trigger": "OMAX_CADLocationFromPixels", "contents": "OMAX_CADLocationFromPixels(${1:PixelX:Integer}, ${2:PixelY:Integer}, ${3:var VectorX:Double}, ${4:VectorY:Double})" },
		{ "trigger": "OMAX_PixelLocationFromCAD", "contents": "OMAX_PixelLocationFromCAD(${1:CadX:double}, ${2:CadY:double}, ${3:var ScreenXi:Integer}, ${4:ScreenYi:Integer})" },
		"OMAX_GetHostUnitsName",
		"OMAX_GetHostUnitsLengthDivisor",
		"OMAX_AreHostUnitsMetric",
		{ "trigger": "OMAX_GetSignificantDigitsFromHost", "contents": "OMAX_GetSignificantDigitsFromHost(${1:SigDigitsForInches:Integer})" },
		{ "trigger": "OMAX_GetScriptInput", "contents": "OMAX_GetScriptInput(${1:Index:Integer})" },
		{ "trigger": "OMAX_SetScriptInput", "contents": "OMAX_SetScriptInput(${1:Index:Integer}, ${2:NewValue:Variant})" },
		{ "trigger": "OMAX_ChangeActivityMode", "contents": "OMAX_ChangeActivityMode(${1:NewActivityMode:Integer})" },
		"OMAX_GetActivityMode",
		{ "trigger": "OMAX_QuickEval", "contents": "OMAX_QuickEval(${1:Expression:String})" },
		"OMAX_IsMakeRunning",
		{ "trigger": "OMAX_CloseOMAXMake", "contents": "OMAX_CloseOMAXMake(${1:WarnFirst:Boolean=True})" },
		{ "trigger": "OMAX_Beep", "contents": "OMAX_Beep(${1:BeepCode:Integer=-1})" },
		{ "trigger": "OMAX_BoolToStr", "contents": "OMAX_BoolToStr(${1:InBool:Boolean})" },
		{ "trigger": "OMAX_GetXYZFromMake", "contents": "OMAX_GetXYZFromMake(${1:var X:Double}, ${2:Y:Double}, ${3:Z1:Double}, ${4:Z2:Double})" },
		"OMAX_Is64Bit",
		"OMAX_SoftwareVersion",
		"OMAX_GetScreenWidth",
		"OMAX_GetScreenHeight",
		{ "trigger": "OMAX_SetHostWindowPos", "contents": "OMAX_SetHostWindowPos(${1:Left:Integer}, ${2:Top:Integer}, ${3: Width:Integer=0; Height})" },
		"OMAX_CenterHostWindow",
		"OMAX_ExitScript",
		"OMAX_ExitHost",
		{ "trigger": "OMAX_AllowScriptToTerminate", "contents": "OMAX_AllowScriptToTerminate(${1:AllowFlag:Boolean=True})" },
		"OMAX_MemorizeEscapeState",
		{ "trigger": "OMAX_VerifyAdminPassword", "contents": "OMAX_VerifyAdminPassword(${1:TestPassword:String})" },
		"OMAX_GetLanguage",
		{ "trigger": "OMAX_SuggestCharSetForActiveLanguage", "contents": "OMAX_SuggestCharSetForActiveLanguage(${1:var CharSet:Integer})" },
		{ "trigger": "OMAX_TranslateStr", "contents": "OMAX_TranslateStr(${1:StringInEnglish:String})" }
	]
}
